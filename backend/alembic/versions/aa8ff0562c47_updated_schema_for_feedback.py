"""Updated schema for feedback

Revision ID: aa8ff0562c47
Revises: 
Create Date: 2025-04-16 02:15:01.439045

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa8ff0562c47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('msu_email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('msu_email')
    )
    op.create_index(op.f('ix_auth_users_id'), 'auth_users', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('question_text', sa.String(length=500), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('residence_halls',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=False),
    sa.Column('amenities', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('options',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('option_text', sa.String(length=300), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rooms',
    sa.Column('room_number', sa.Integer(), nullable=False),
    sa.Column('residence_hall_id', sa.Integer(), nullable=False),
    sa.Column('room_type', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('current_occupants', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('room_status', sa.String(length=20), nullable=True),
    sa.Column('lease_end', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['residence_hall_id'], ['residence_halls.id'], ),
    sa.PrimaryKeyConstraint('room_number', 'residence_hall_id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('msu_email', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('msu_id', sa.String(length=50), nullable=True),
    sa.Column('profile_image', sa.String(length=255), nullable=True),
    sa.Column('modified_profile_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_profile_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('move_in_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bio', sa.String(length=800), nullable=True),
    sa.Column('majors', sa.String(length=255), nullable=True),
    sa.Column('room_number', sa.Integer(), nullable=True),
    sa.Column('residence_hall_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['room_number', 'residence_hall_id'], ['rooms.room_number', 'rooms.residence_hall_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('msu_email'),
    sa.UniqueConstraint('msu_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('event_start', sa.DateTime(), nullable=False),
    sa.Column('event_end', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['user_profiles.id'], ),
    sa.ForeignKeyConstraint(['requested_by'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('user_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_option', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_responses_id'), 'user_responses', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_responses_id'), table_name='user_responses')
    op.drop_table('user_responses')
    op.drop_table('events')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_table('rooms')
    op.drop_table('options')
    op.drop_table('residence_halls')
    op.drop_table('questions')
    op.drop_index(op.f('ix_auth_users_id'), table_name='auth_users')
    op.drop_table('auth_users')
    # ### end Alembic commands ###
